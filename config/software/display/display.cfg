### Klippain display management ###

[gcode_macro _USER_VARIABLES]
variable_minidisplay_bootlogo_enabled = True
variable_minidisplay_bootinfo_enabled = True
gcode:

[include klippain_splash.cfg]


#### START SPLASH SCREEN
[gcode_macro _INIT_BOOT_LOGO]
gcode:
    {% if printer["gcode_macro _USER_VARIABLES"].minidisplay_bootlogo_enabled %}
        SET_DISPLAY_GROUP GROUP=_my_intro
        UPDATE_DELAYED_GCODE ID=_INIT_BOOT_INFO DURATION=4
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=4.1
    {% endif %}

#### START SPLASH SCREEN
[delayed_gcode _INIT_BOOT_INFO]
initial_duration: 4
gcode:
    {% if printer["gcode_macro _USER_VARIABLES"].minidisplay_bootinfo_enabled %}
        SET_DISPLAY_GROUP GROUP=_my_info
        UPDATE_DELAYED_GCODE ID=clear_display DURATION=4
    {% endif %}

[delayed_gcode clear_display]
gcode:
    M117
    SET_DISPLAY_GROUP GROUP={printer.configfile.settings.display.display_group}



### Menu changes to personalize it with Klippain macros
# default implementation: https://github.com/Klipper3d/klipper/blob/master/klippy/extras/display/menu.cfg

# Shutdown and reboot
[menu __main __setup __restart]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Host control

# Add a park menu item.
[menu __main __control __park]
type: command
name: Park toolhead
enable: {printer.idle_timeout.state != "Printing" or
         printer.pause_resume.is_paused}
index: 0
gcode:
  PARK

[menu __main __setup __restart __shutdown]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shutdown host
gcode: SHUTDOWN

### menu octoprint ###
[menu __main __octoprint]
type: disabled

[menu __main __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={printer["gcode_macro _USER_VARIABLES"].light_intensity_start_print if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
realtime: True
gcode:
    SET_PIN PIN=caselight VALUE={menu.input*100}

################################################################################
# Replace filament loading with our own macros
################################################################################
[menu __main __filament]
type: list
name: Filament
enable: {printer.idle_timeout.state != "Printing" or
         printer.pause_resume.is_paused}

# Hide the old load/unload commands.
[menu __main __filament __loadf]
type: command
name: Load Fil. fast
enable: False

[menu __main __filament __loads]
type: command
name: Load Fil. slow
enable: False

[menu __main __filament __unloadf]
type: command
name: Unload Fil.fast
enable: False

[menu __main __filament __unloads]
type: command
name: Unload Fil.slow
enable: False

# Add new load/unload using our macros.
[menu __main __filament __load]
type: command
index: 1
name: Load Filament
gcode:
  LOAD_FILAMENT

[menu __main __filament __unload]
type: command
index: 2
name: Unload Filament
gcode:
  UNLOAD_FILAMENT

[menu __main __filament __purge]
type: command
index: 3
name: Purge Filament
gcode:
  PURGE

[menu __main __filament __clean]
type: command
index: 3
name: Clean Nozzle
gcode:
  CLEAN_NOZZLE
