## MMU config file
## Designed to be used with "Happy Hare" (HH) by moggieuk: https://github.com/moggieuk/Happy-Hare

[gcode_macro _USER_VARIABLES]
variable_klippain_mmu_enabled: True
gcode:

[extruder]
max_extrude_only_distance: 200
max_extrude_cross_section: 50.0


# Custom macros to raise an error during the START_PRINT and stop it in case of an MMU error
[gcode_macro _MMU_ERROR_CHECK1]
description: script to stop start_print if mmu error is detected
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set INITIAL_TOOL = printer["gcode_macro START_PRINT"].initial_tool %}

    {% if printer.mmu.print_state|string == "pause_locked" %}
        {action_raise_error("MMU is locked! please check and use RESUME to unlock MMU then restart the print. PS: Sorry but it's actually the only way to stop the START_PRINT gcode!!!")}
        {% elif printer.mmu.is_locked %}          # will be depreciated
        {action_raise_error("MMU is locked! please check and use RESUME to unlock MMU then restart the print. PS: Sorry but it's actually the only way to stop the START_PRINT gcode!!!")}
    {% elif verbose %}
        {% if printer.mmu.tool|int == -1 %}
            RESPOND PREFIX='mmu gate:' MSG="<span class="warning"--text> No tool selected! </span>"
        {% elif printer.mmu.tool|int == -2 %}
            RESPOND PREFIX='mmu gate:' MSG="<span class="success"--text> Bypass selected</span>"
        {% else %}
            RESPOND PREFIX='mmu tool:' MSG="<span class="success"--text> Preload T{printer.mmu.tool} OK</span>"
        {% endif %}
    {% endif %}

[gcode_macro _MMU_ERROR_CHECK2]
description: second script to stop start_print if mmu error is detected
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set INITIAL_TOOL = printer["gcode_macro START_PRINT"].initial_tool %}

    {% if printer.mmu.print_state|string == "pause_locked" %}
        {action_raise_error("MMU is locked! please check and use RESUME to unlock MMU then restart the print. PS: Sorry but it's actually the only way to stop the START_PRINT gcode!!!")}
    {% elif printer.mmu.is_locked %}          # will be depreciated
        {action_raise_error("MMU is locked! please check and use RESUME to unlock MMU then restart the print. PS: Sorry but it's actually the only way to stop the START_PRINT gcode!!!")}
    {% elif printer.mmu.filament != "Loaded" %}
       {action_raise_error("Filament is not loaded! Check then restart the print. PS: Sorry but it's actually the only way to stop the START_PRINT gcode!!!")}
    {% elif printer.mmu.tool|int != -2 and printer.mmu.tool|int != INITIAL_TOOL %}
        {action_raise_error("Initial tool ({INITIAL_TOOL}) and MMU tool ({printer.mmu.tool}) are different!!! Check then restart the print. PS: Sorry but it's actually the only way to stop the START_PRINT gcode!!!")}
    {% elif verbose %}
        {% if printer.mmu.tool|int == -1 %}
            RESPOND PREFIX='mmu gate:' MSG="<span class="warning"--text> something get wrong! No tool active! </span>"
        {% elif printer.mmu.tool|int == -2 %}
            RESPOND PREFIX='mmu gate:' MSG="<span class="success"--text> Bypass selected and loaded</span>"
        {% else %}
            RESPOND PREFIX='mmu tool:' MSG="<span class="success"--text> T{printer.mmu.tool} ready</span>"
        {% endif %}
    {% endif %}

[gcode_macro _MMU_CHECK_STATE]
description: hidden script: display some mmu parameters
gcode:
    RESPOND PREFIX=<prefix> MSG="<span class="accent"--text> Klippain Happy_Hare_Benoit</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.print_state : {printer.mmu.print_state}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.print_start_detection : {printer.mmu.print_start_detection}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.tool : {printer.mmu.tool}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.filament : {printer.mmu.filament}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.filament_pos : {printer.mmu.filament_pos}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.is_locked : {printer.mmu.is_locked}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.sync_drive : {printer.mmu.sync_drive}</span>"
    RESPOND PREFIX=<prefix> MSG="<span class="success"--text> mmu.clog_detection : {printer.mmu.clog_detection}</span>"

# Custom macros for MMU in addition to that in HHv2
[gcode_macro _MMU_SET_SPOOL_ID]
description: Select and set Spoolman active spool in some case not unmanaged by HHv2. HHv2 change spoolman ID on the other toolchange.
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set spoolman_enabled = printer["gcode_macro _USER_VARIABLES"].spoolman_enabled %}
    {% set TOOL_ID = params.TOOL|default(0)|int %}
    {% set BYPASS_ID = printer["gcode_macro START_PRINT"].initial_tool %}

    {% if spoolman_enabled %}
        {% if printer.mmu.enabled %}
            {% if printer.mmu.tool|int == -2 %}
                SET_ACTIVE_SPOOL ID={BYPASS_ID}
                {% if verbose %}
                    RESPOND PREFIX='Info:' MSG="<span class="success"--text> Bypass selected with Spool ID {BYPASS_ID}</span>"
                {% endif %}
            {% elif TOOL_ID >= 0 %} # protect against bypass or unknown tool
                {% set GATE_NUMBER = printer.save_variables.variables.mmu_state_tool_to_gate_map[TOOL_ID] %}
                {% if GATE_NUMBER >= 0 %} # protect against unknown gate
                    {% set TOOL_SPOOL_ID = printer.mmu.gate_spool_id[GATE_NUMBER] %}
                    SET_ACTIVE_SPOOL ID={TOOL_SPOOL_ID}
                    {% if verbose %}
                        RESPOND PREFIX='Info:' MSG="<span class="success"--text> T{TOOL_ID} is in Gate {GATE_NUMBER} with Spool ID {TOOL_SPOOL_ID}</span>"
                    {% endif %}
                {% else %}
                    RESPOND PREFIX='Config info:' MSG="<span class="warning"--text> T{TOOL_ID} is not mapped to any gate."
                {% endif %}
            {% else %}
                RESPOND PREFIX='Config info:' MSG="<span class="error"--text> Invalid tool number: {TOOL_ID}"
            {% endif %}
        {% else %}
            RESPOND PREFIX='Config info:' MSG="<span class="warning"--text> Spoolman is enabled but MMU is disabled."
        {% endif %}
    {% else %}
        RESPOND PREFIX='Config info:' MSG="<span class="error"--text> Spoolman disabled"
    {% endif %}
