# This probe type is for a Cartographer probe used directly as a virtual Z endstop
# rather than with an existing physical endstop. To use this configuration,
# you will need to manually add the Cartographer Klipper plugin!

## Then, you should just add the following two lines to your overrides and everything should work!
#[cartographer]
#   Path to the serial port for the Cartographer device. Typically has the form
#   /dev/serial/by-id/usb-cartographer_cartographer_...
#   
#   If you are using the CAN Bus version, replace serial: with canbus_uuid: and add the UUID.
#   Example: canbus_uuid: 1283as878a9sd
#

[cartographer]
#   Path to the serial port for the Cartographer device. Typically has the form
#   /dev/serial/by-id/usb-cartographer_cartographer_...
#   
#   If you are using the CAN Bus version, replace serial: with canbus_uuid: and add the UUID.
#   Example: canbus_uuid: 1283as878a9sd
#
# These settings are the defaults from Cartographer, edit as needed in your overrides.cfg
speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.
#   X offset of cartographer from the nozzle.
y_offset: 21.1
#   Y offset of cartographer from the nozzle.
trigger_distance: 2.
#   cartographer trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default cartographer model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.

[safe_z_home]
home_xy_position: 150,150
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
z_hop: 10

[gcode_macro _USER_VARIABLES]
# We can declare an "inductive_virtual" probe type as it's pretty close to the Cartographer way of working and should just work!
variable_probe_type_enabled: "inductive_virtual"
gcode:

# Cartographer probe definition also include the probe management macro directly from here
[include ../../../macros/base/probing/generic_probe.cfg]

# PROBE_CALIBRATE macro as per the cartographer docs
[include ../../../macros/base/probing/cartographer.cfg]

# Z Stepper overrides for Cartographer
[stepper_z]
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0

