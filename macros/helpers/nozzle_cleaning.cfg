[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES"].purge_and_brush_enabled %}
    {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
    {% set brush_clean_accel = printer["gcode_macro _USER_VARIABLES"].brush_clean_accel %}
    {% set brush_over_y_axis = printer["gcode_macro _USER_VARIABLES"].brush_over_y_axis %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    
    {% if purge_and_brush_enabled %}
        {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
        {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
        {% set Sc = printer["gcode_macro _USER_VARIABLES"].brush_clean_speed * 60 %}

        {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES"].purge_bucket_xyz|map('float') %}
        {% set Bx, By, Bz = printer["gcode_macro _USER_VARIABLES"].brush_xyz|map('float') %}

        {% if status_leds_enabled %}
            STATUS_LEDS COLOR="CLEANING"
        {% endif %}
        
        {% if verbose %}
            RESPOND MSG="Nozzle cleaning..."
        {% endif %}

        # Set the cleaning acceleration prior to any movement
        {% set saved_accel = printer.toolhead.max_accel %}
        {% set saved_decel = printer.toolhead.max_accel_to_decel %}
        M204 S{brush_clean_accel}
        
        # Move to purge zone (left side)
        G90
        G1 X{Px} Y{Py} Z{Bz} F{St}
        # Move to center of the brush
        G1 X{Bx} Y{By} Z{Bz} F{St}

        # Wipe procedure
        G91
	{% if brush_over_y_axis %}
            {% for wipe in range(6) %}
                G1 Y-5 F{Sc}
                G1 Y+5 F{Sc}
            {% endfor %}
        {% endif %}

        G1 X+20 F{Sc}
        {% for wipe in range(6) %}
            G1 X-40 F{Sc}
            G1 X+40 F{Sc}
        {% endfor %}

        G1 Z{Bz|int + 10} F{Sz}

        G90

        # Reset acceleration values to what it was before
        SET_VELOCITY_LIMIT ACCEL={saved_accel} ACCEL_TO_DECEL={saved_decel}
    {% endif %}
    
    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="READY"
    {% endif %}
    
    

[gcode_macro PURGE]
description: Purge a specific amount of filament ontop of the purge bucket
gcode:
    {% set DISTANCE = params.DISTANCE|default(printer["gcode_macro _USER_VARIABLES"].purge_distance)|int %}
    {% set TEMP = params.TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}

    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES"].purge_and_brush_enabled %}
    {% set motion_sensor_enabled = printer["gcode_macro _USER_VARIABLES"].motion_sensor_enabled %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}

    {% if verbose %}
        RESPOND MSG="Purge filament..."
    {% endif %}

    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR="runout_sensor" ENABLE=0
    {% endif %}

    G90

    MOVE_TO_PURGE_BUCKET Z_DROP={Z_DROP}

    # Heat if needed and purge
    _LOW_TEMP_CHECK T={TEMP}
  
    G92 E0
    G1 E{DISTANCE|float} F150
  
    # Retract
    G92 E0
    G1 E-1.7 F2100
    G1 E-18.3 F150

    # Wait 20s to let the nozzle ooze before cleaning
    G91
    G1 Z5 F{Sz}
    G90
    G4 P{20 * 1000}
  
    G92 E0

    {% if motion_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR="runout_sensor" ENABLE=1
    {% endif %}

    

[gcode_macro MOVE_TO_PURGE_BUCKET]
description: Move over the purge bucket
gcode:
    {% set purge_and_brush_enabled = printer["gcode_macro _USER_VARIABLES"].purge_and_brush_enabled %}
    {% set Z_DROP = params.Z_DROP|default(1)|int %}
    
    # Move to purge zone only if it's available, else just purge where the toolhead is
    {% if purge_and_brush_enabled %}
        SAVE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
        G90
        {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

        {% set Px, Py, Pz = printer["gcode_macro _USER_VARIABLES"].purge_bucket_xyz|map('float') %}
        {% if Z_DROP == 1 %}
            G1 X{Px} Y{Py} Z{Pz} F{St}
        {% else %}
            G1 X{Px} Y{Py} F{St}
        {% endif %}
        RESTORE_GCODE_STATE NAME=MOVE_TO_PURGE_BUCKET
    {% endif %}    
 
