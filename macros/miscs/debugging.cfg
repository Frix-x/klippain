[gcode_macro _SEARCH_VARS]
description: Search for variables in the "printer" object from Klipper
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

# Specific macro to raise an error during the print_start and stop in case of ERCF error
[gcode_macro _DO_ERROR_ERCF_PAUSE]
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set INITIAL_TOOL = printer["gcode_macro START_PRINT"].initial_tool %}

    {% if printer.ercf.enabled|int == 1 %}
        {% if printer.ercf.tool|int != INITIAL_TOOL or printer.ercf.filament != "Loaded" %}
            {action_raise_error("ERROR in loading filament from ERCF !!! Check and restart the print.")}
        {% else %}
            {% if verbose %}
                RESPOND MSG="T{INITIAL_TOOL} ready"
            {% endif %}
        {% endif %}
    {% endif %}