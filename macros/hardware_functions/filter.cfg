[gcode_macro START_FILTER]
gcode:
    {% set SPEED_FILTER = params.SPEED_FILTER|default(1)|float %}
    {% set filter_name = printer["gcode_macro _USER_VARIABLES"].filter_name %}
    SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}

[gcode_macro START_EXHAUST]
gcode:
    {% set SPEED_EXHAUST = params.SPEED_EXHAUST|default(1)|float %}
    {% set exhaust_fan_enabled = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled %}
    {% set exhaust_filter_enabled = printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled %}
    {% set exhaust_duplicate = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled and printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled%}
    {% set exhaust_name = printer["gcode_macro _USER_VARIABLES"].exhaust_name %}

        {% if exhaust_duplicate %}
            RESPOND MSG="Filters: make choise between exhaust with or without filter in config/hardware/addons/filters/exhaust_filter.cfg !!!"
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
        {% elif exhaust_fan_enabled %}
            RESPOND MSG="Exhaust Without Filter: not to be use with ABS or ASA filament !!!"
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
        {% elif exhaust_filter_enabled %}
            RESPOND MSG="Exhaust with Filter Enable..."
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
        {% else %}
            RESPOND MSG="No Exhaust Filter (check <config/hardware/addons/filters/exhaust_filter.cfg> if you have one)"
        {% endif %}

[gcode_macro STOP_FILTERS]
gcode:
    {% set filter_enabled = printer["gcode_macro _USER_VARIABLES"].filter_enabled %}
    {% set exhaust_enabled = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled or printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled %}
    {% set exhaust_duplicate = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled and printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled%}
    {% set exhaust_name = printer["gcode_macro _USER_VARIABLES"].exhaust_name %}
    {% set filter_name = printer["gcode_macro _USER_VARIABLES"].filter_name %}

    {% if exhaust_duplicate and filter_enabled %}
        RESPOND MSG="Filters: make choise between exhaust with or without filter in config/hardware/addons/filters/exhaust_filter.cfg !!!"
        SET_FAN_SPEED FAN={filter_name} SPEED=0
        SET_FAN_SPEED FAN={exhaust_name} SPEED=0
    {% elif filter_enabled and exhaust_enabled %}
        SET_FAN_SPEED FAN={filter_name} SPEED=0
        SET_FAN_SPEED FAN={exhaust_name} SPEED=0
    {% elif filter_enabled %}
        SET_FAN_SPEED FAN={filter_name} SPEED=0
    {% elif exhaust_enabled %}
        SET_FAN_SPEED FAN={exhaust_name} SPEED=0
    {% endif %}

[gcode_macro START_FILTERS]
gcode:
    {% set filter_enabled = printer["gcode_macro _USER_VARIABLES"].filter_enabled %}
    {% set exhaust_enabled = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled or printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled %}
    {% set exhaust_duplicate = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled and printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled %}
    {% set filter_name = printer["gcode_macro _USER_VARIABLES"].filter_name %}
    {% set exhaust_name = printer["gcode_macro _USER_VARIABLES"].exhaust_name %}
    {% set FILTER_TIME = params.FILTER_TIME|default(600)|int %}
    {% set SPEED_FILTER= params.SPEED_FILTER|default(1)|float %}
    {% set SPEED_EXHAUST = params.SPEED_EXHAUST|default(1)|float %}

    {% if filter_enabled and exhaust_duplicate %}
        RESPOND MSG="Filters: make choise between exhaust with or without filter in config/hardware/addons/filters/exhaust_filter.cfg !!!"
        SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
        UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
    {% elif filter_enabled and exhaust_enabled %}
        SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
        SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
        UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
    {% elif filter_enabled %}
        SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
        UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
    {% elif exhaust_enabled %}
        SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
        UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
    {% endif %}

[gcode_macro START_FILTERS_MATERIAL]
gcode:
    {% set filter_enabled = printer["gcode_macro _USER_VARIABLES"].filter_enabled %}
    {% set exhaust_enabled = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled %}
    {% set exhaust_filter_enabled = printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled %}
    {% set exhaust_duplicate = printer["gcode_macro _USER_VARIABLES"].exhaust_fan_enabled and printer["gcode_macro _USER_VARIABLES"].exhaust_filter_enabled %}
    {% set filter_name = printer["gcode_macro _USER_VARIABLES"].filter_name %}
    {% set exhaust_name = printer["gcode_macro _USER_VARIABLES"].exhaust_name %}
    {% set FILTER_TIME = params.FILTER_TIME|default(600)|int %}
    {% set SPEED_FILTER= params.SPEED_FILTER|default(1)|float %}
    {% set SPEED_EXHAUST = params.SPEED_EXHAUST|default(1)|float %}
    {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES"].print_default_material)|string %}

    {% if MATERIAL == "ABS" or "ASA" or "XXX" %}
        {% if filter_enabled and exhaust_duplicate %}
            RESPOND MSG="Filters: make choise between exhaust with or without filter in config/hardware/addons/filters/exhaust_filter.cfg !!!"
            RESPOND MSG="Material: {MATERIAL} and Filter: Nevermore Filtration"
            SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% elif filter_enabled and exhaust_filter_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filters: Nevermore and Exhaust Filtration"
            SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% elif filter_enabled and exhaust_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filter: Nevermore Filtration"
            SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% elif filter_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filter: Nevermore Filtration"
            SET_FAN_SPEED FAN={filter_name} SPEED={SPEED_FILTER}
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% elif exhaust_filter_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filter: Exhaust Filtration"
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% elif exhaust_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filter: Exhaust -> No filtration"
        {% endif %}
    {% elif MATERIAL == "PET" or "PETG" or "PLA" %}
        {% if filter_enabled and exhaust_duplicate %}
            RESPOND MSG="Filters: make choise between exhaust with or without filter in config/hardware/addons/filters/exhaust_filter.cfg !!!"
            RESPOND MSG="Material: {MATERIAL} No Exhaust extraction !!!"
        {% elif filter_enabled and exhaust_filter_enabled %}
            RESPOND MSG="Material: {MATERIAL} and No Exhaust extraction"
        {% elif filter_enabled and exhaust_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filter: Exhaust extraction"
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% elif filter_enabled %}
            RESPOND MSG="Material: {MATERIAL} and No Exhaust extraction"
        {% elif exhaust_filter_enabled %}
            RESPOND MSG="Material: {MATERIAL} and Filter: Exhaust Filtration"
        {% elif exhaust_enabled %}
            SET_FAN_SPEED FAN={exhaust_name} SPEED={SPEED_EXHAUST}
            RESPOND MSG="Material: {MATERIAL} and Filter: Exhaust extraction"
        {% endif %}
    {% endif %}

    [delayed_gcode _STOP_FILTER_DELAYED]
gcode:
    STOP_FILTERS

    # # ===================================================================================== # #
# # ===================================================================================== # #


# A set of macros to remind you when to refresh your carbon filter
# The latest version of this file can always be found at https://github.com/MapleLeafMakers/KlipperMacros/
#
# Usage:
#
# NOTE: `[save_variables]` must be present in your configuration in order for this to work. for example:
# 
# [save_variables]
# filename: ~/klipper_config/saved_variables.cfg
# 
# include this file in your main printer.cfg by adding `[include air_filter.cfg]`
# check the Configuration section below, and update the variables if necessary.  The default
# configuration is set up to work with a `fan_generic` called `air_filter`.  if yours is set up
# differently, please update the `variable_fan` value.  
# 
# After your air filter has run for the configured amount of time, the replacement_gcode will be run 
# every 1 second until `RESET_AIR_FILTER` is executed.  by default this displays a message on the LCD.
# 
# You may query the current time on the filter by running `QUERY_AIR_FILTER`



[gcode_macro _AIR_FILTER_VARIABLES]

## Configuration

variable_fan: 'fan_generic filter'						# The fan to track.
variable_hours_until_replacement: 50						# total hours the filter can run before media needs replacing
variable_replacement_gcode: 'M117 replace filter media'		# gcode to run when the media needs to be replaced (will be repeated every second until reset)

## Do not edit below this line
variable_time: -1
gcode:


[gcode_macro RESET_AIR_FILTER]
description: Resets the air-filter replacement timer
gcode:
    SET_GCODE_VARIABLE MACRO=_AIR_FILTER_VARIABLES VARIABLE=time VALUE=0
    SAVE_VARIABLE VARIABLE=air_filter_time VALUE=0
    { action_respond_info("Air filter timer has been reset.") }


[gcode_macro QUERY_AIR_FILTER]
description: Displays the amount of time the air filter has run since it was last reset.
gcode:
    {% set hours = "%.2f"|format(printer['gcode_macro _AIR_FILTER_VARIABLES'].time|int / 3600) %}
    { action_respond_info("Air Filter Hours: " + hours) }



[delayed_gcode _AIR_FILTER_TIMER]
initial_duration: 1
gcode:
    {% set cached_time = printer['gcode_macro _AIR_FILTER_VARIABLES'].time|int %}
        {% if cached_time == -1 %}
        {% set cached_time = printer.save_variables.variables.air_filter_time|default(0) %}
        SET_GCODE_VARIABLE MACRO=_AIR_FILTER_VARIABLES VARIABLE=time VALUE={ cached_time }
    {% endif %}
    {% if printer[printer['gcode_macro _AIR_FILTER_VARIABLES'].fan].speed|float > 0 %}
        SET_GCODE_VARIABLE MACRO=_AIR_FILTER_VARIABLES VARIABLE=time VALUE={ cached_time + 1}
    {% endif %}
    {% set replacement_seconds = printer['gcode_macro _AIR_FILTER_VARIABLES'].hours_until_replacement|float * 3600 %}
    {% if cached_time > replacement_seconds %}
    { printer['gcode_macro _AIR_FILTER_VARIABLES'].replacement_gcode }
    {% endif %}
    UPDATE_DELAYED_GCODE ID=_AIR_FILTER_TIMER DURATION=1


[delayed_gcode _AIR_FILTER_FLUSH_TIMER]
initial_duration: 300
gcode:
    {% set saved_time = printer.save_variables.variables.air_filter_time|default(0)|float %}
    {% set actual_time = printer['gcode_macro _AIR_FILTER_VARIABLES'].time|float %}
    {% if saved_time != actual_time %}
        SAVE_VARIABLE VARIABLE=air_filter_time VALUE={actual_time}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=_AIR_FILTER_FLUSH_TIMER DURATION=300