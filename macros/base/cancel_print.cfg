[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel the print, retract 10mm of filament and park
gcode:
    {% set turn_off_heaters_in_end_print = printer["gcode_macro _USER_VARIABLES"].turn_off_heaters_in_end_print %}
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}
    {% set light_intensity_end_print = printer["gcode_macro _USER_VARIABLES"].light_intensity_end_print %}
    {% set klippain_mmu_enabled = printer["gcode_macro _USER_VARIABLES"].klippain_mmu_enabled %}
    {% set mmu_unload_on_cancel_print = printer["gcode_macro _USER_VARIABLES"].mmu_unload_on_cancel_print %}
    {% set filter_enabled = printer["gcode_macro _USER_VARIABLES"].filter_enabled %}
    {% set light_enabled = printer["gcode_macro _USER_VARIABLES"].light_enabled %}
    {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
    {% set bed_mesh_enabled = printer["gcode_macro _USER_VARIABLES"].bed_mesh_enabled %}
    {% set filament_sensor_enabled = printer["gcode_macro _USER_VARIABLES"].filament_sensor_enabled %}
    {% set filter_default_time = printer["gcode_macro _USER_VARIABLES"].filter_default_time_on_end_print|default(600)|int %}
    {% set hotend_fan_tach_enabled = printer["gcode_macro _USER_VARIABLES"].hotend_fan_tach_enabled %}

    PARK

    {% if klippain_mmu_enabled and mmu_unload_on_cancel_print %}
        {% if printer.mmu.enabled and printer.mmu.tool|int != -2 %}
            # Unload filament and park the MMU
            MMU_EJECT
        {% endif %}
    {% elif printer.extruder.can_extrude %}
        # Pull back the filament a little bit
        G92 E0
        G1 E-10 F2100
    {% endif %}

    {% if turn_off_heaters_in_end_print %}
        TURN_OFF_HEATERS
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={safe_extruder_temp}
    {% endif %}

    {% if hotend_fan_tach_enabled %}
        UPDATE_DELAYED_GCODE ID=_BACKGROUND_HOTEND_TACHO_CHECK DURATION=0
    {% endif %}

    M107
    M400

    CLEAR_PAUSE

    {% if bed_mesh_enabled %}
        BED_MESH_CLEAR
    {% endif %}

    SDCARD_RESET_FILE

    # If a filter is connected, and used during the print, continue filtering the air
    # for a couple of min before stopping everything
    {% if filter_enabled %}
        {% if printer['fan_generic filter'].speed > 0 %}
            {% set FILTER_TIME = params.FILTER_TIME|default(filter_default_time)|int %}
            START_FILTER SPEED=1
            UPDATE_DELAYED_GCODE ID=_STOP_FILTER_DELAYED DURATION={FILTER_TIME}
        {% endif %}
    {% endif %}

    {% if light_enabled %}
        LIGHT_ON S={light_intensity_end_print}
    {% endif %}
    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="OFF"
    {% endif %}

    {% if klippain_mmu_enabled %}
        {% if printer.mmu.enabled and printer.mmu.print_start_detection|int == 0 %}
            _MMU_PRINT_END STATE=cancelled
        {% endif %}
    {% endif %}

    # If a filament sensor is connected, re-enable it in case it was disabled during printing
    {% if filament_sensor_enabled %}
        SET_FILAMENT_SENSOR SENSOR="runout_sensor" ENABLE=1
    {% endif %}
    
    BASE_CANCEL_PRINT
