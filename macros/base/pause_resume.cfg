[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
gcode:
    {% set light_enabled = printer["gcode_macro _USER_VARIABLES"].light_enabled %}
    {% set light_intensity_start_print = printer["gcode_macro _USER_VARIABLES"].light_intensity_start_print %}
    {% set idle_timeout_on_pause = printer["gcode_macro _USER_VARIABLES"].idle_timeout_on_pause|default(0)|int %}

    {% if printer.pause_resume.is_paused %}
        RESPOND MSG="Print is already paused"
    {% else %}
        SAVE_GCODE_STATE NAME=PAUSE_state
        {% if light_enabled %}
            LIGHT_ON S={light_intensity_start_print}
        {% endif %}

        BASE_PAUSE
        PARK

        {% if idle_timeout_on_pause > 0 %}
            SET_IDLE_TIMEOUT TIMEOUT={idle_timeout_on_pause}
        {% endif %}
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resume the print after an optional unretract
gcode:
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed %}
    {% set light_enabled = printer["gcode_macro _USER_VARIABLES"].light_enabled %}
    {% set light_intensity_printing = printer["gcode_macro _USER_VARIABLES"].light_intensity_printing %}
    {% set klippain_mmu_enabled = printer["gcode_macro _USER_VARIABLES"].klippain_mmu_enabled %}
    {% set idle_timeout_on_pause = printer["gcode_macro _USER_VARIABLES"].idle_timeout_on_pause|default(0)|int %}

    {% if not printer.pause_resume.is_paused %}
        RESPOND MSG="Print is not paused. Resume ignored"
    {% else %}
        {% if klippain_mmu_enabled %}
            {% if printer.mmu.enabled and printer.mmu.is_locked %}
                RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=0
            {% else %}
                RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={St}
            {% endif %}
        {% else %}
            RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED={St}
        {% endif %}

        {% if light_enabled %}
            LIGHT_ON S={light_intensity_printing}
        {% endif %}

        {% if idle_timeout_on_pause > 0%}
            SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
        {% endif %}

        BASE_RESUME
    {% endif %}
