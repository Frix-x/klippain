[gcode_macro PARK]
description: Park the toolhead at the back and retract some filament if the nozzle is hot
gcode:
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set E = params.E|default(1.7)|float|abs %}
    {% set MATERIAL = printer['gcode_macro START_PRINT'].material %}

    {% set Px, Py = printer["gcode_macro _USER_VARIABLES"].park_position_xy|map('float') %}
    {% set Px = params.X|default(Px)|float %}
    {% set Py = params.Y|default(Py)|float %}
    
    {% set park_lift_z = printer["gcode_macro _USER_VARIABLES"].park_lift_z %}
    {% set Z_HOP = params.Z_HOP|default(park_lift_z)|float %}
    {% set firmware_retraction_enabled = printer["gcode_macro _USER_VARIABLES"].firmware_retraction_enabled %}

    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}

    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}

    {% set z_safe = act_z + Z_HOP %}
    {% if z_safe > max_z %}
        {% set z_safe = max_z %}
    {% endif %}

    _CG28 ; home if not already homed

    {% if printer.extruder.can_extrude %}
        {% if firmware_retraction_enabled %}    # use firmware_retraction parameter for retract (in case firmware retraction is selected in printer.cfg)
            {% if verbose %}
                RESPOND MSG="Firmware retraction enabled, Extruder retraction = {printer.firmware_retraction.retract_length}"
            {% endif %}
            G10
        {% else %}                              # otherwise:
            {% if MATERIAL != "XXX" %}          # use material parameter if available for retract, otherwise use default value
                {% set material = printer["gcode_macro _USER_VARIABLES"].material_parameters[MATERIAL] %}
                {% set E = material.retract_length %}
            {% endif %}
            {% if verbose %}
                RESPOND MSG="Firmware retraction disabled, Extruder retraction = {E}"
            {% endif %}
            G92 E0
            G1 E-{E} F2100
        {% endif %}
    {% endif %}

    G90
    G1 Z{z_safe} F{Sz}
    G0 X{Px} Y{Py} F{St}


[gcode_macro PARK_FRONT]
description: Park the toolhead on the front of the printer for maintenance
gcode:
    {% set St = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set Sz = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}

    _CG28 ; home if not already homed

    SAVE_GCODE_STATE NAME=PARK_FRONT
    G90      ; absolute positioning
    G0 Z{printer.toolhead.axis_maximum.z/3*2} F{Sz}
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} F{St}
    RESTORE_GCODE_STATE NAME=PARK_FRONT
